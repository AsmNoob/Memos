---- Souris et leur dépendance à la cocaine -----


----- Iphyton et intro à Git -----

___Git____

SCM: Source code manager
- keeping the logs
- comment
- Work on a distant repo

Basic commands:
- git add -> ajoute le fichier au repo

- git commit -> l'ajoute aux ajouts.

Synthèse du fct:
	working directory
	-> add
	staging area
	-> commit
	definitive area

Branch( permet d'associer un nom à un commit)
- branch principale: master

- git checkout <branch> 

Merge (permet de fusionner des branches)
- git merge <other branch>

Commandes Github:
- Fork -> copie toute une branche
- Pull requests -> permet de récupérer des repo entiers

Gestion de projets:
- mise en page, comments, wiki, bugtracker

site officiel: git-scm.com

___Ipython____

Trop classe: Bpython :D A TEST !!!

Encore plus classe: IPython
-> Mais pas encore pratique

-> Interface python web trop swag: install iphython notebook

1) création notebook

- on peut ajouter des markcodes
- ?  à la fin d'une commande pour un help 
- ?? pour le code source de la commande

----- Swarm Robotics -----

swarm: robotique en essaim

Point principal: interaction entre robots et humains
Phrase: le tout est plus que la somme de ses parties.

Utilisé au début pour valider des théorèmes biologiques.
Gros base: Etudes des fourmies.

Utilité actuelle: applications industrielles (search and rescue, immeuble qui s'éffondre, exploration environnement, déminage, nettoyage marée noire) (encore très loin)


Différentes parties qui intéressent ce type de structures:
- task partitioning
- morphogenèse (crée une forme pour résoudre un problème)
- navigation collective
- etc

Interaction robots:
- homme -> robot: difficulté avec le réferentiel propre à chaque robot (les axe x/y)

- le nombre de robots est trop élevé pour que tous les robots envoient des infos.

Approche utilisée: on étudie un sous-groupe de robots.
-> accord dans le même sous-groupe d'un même réferentiel commun.
(activité autonome des robots après une commane humaine)

Travail du présentateur: Faciliter la compréhesion de données reçues.

1) self-organised feedback: utiliser les algos utilisés par les chercheurs pour envoyer de l'information aux humains (ex: déplacement -> quelle direction ? -> forme directionnelle crée par les robots)(ex2: affichage avec un device)

2) Interaction les moins stressantes possibles
(étude des réactions humaines pour en ressortir une info sur son état psychologiques) 

Après des expériences évaluant cet état: 
1) 2,12, 22 robots qui bougent
2) idem mais en cours de route la moitié crash.



